//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Players7Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChatServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-------
        ///
        ///[argument] = necessary argument
        ///&lt;argument&gt; = optional argument
        ///
        ///&quot;csn&quot; = close server now
        ///&quot;clients&quot; = returns number of connected clients
        ///&quot;settings &lt;name&gt;&quot; = returns all settings / &lt;name&gt; = specific setting
        ///&quot;cls&quot; / &quot;clear &quot; = clears console
        ///&quot;b [msg] &lt;-last?&gt;&quot; = broadcast message OR resend last broadcasted message
        ///&quot;a [id1,id2,...]^[msg]&quot; = send msg to all id&apos;s in list
        ///&quot;k [id] &lt;time&gt;&quot; = kick user with given ID for &lt;time&gt; seconds
        ///&quot;e [prop]=[newValue]&quot; = change value of property to newVa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConsoleCommandGuide {
            get {
                return ResourceManager.GetString("ConsoleCommandGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to writeInFile=true 
        ///serverPort=15432
        ///maxClients=10
        ///authMethod=UsernameOnly
        ///passKey=x
        ///consoleBackColor=White
        ///logPackets=true
        ///acceptServerSockets=true
        ///svOwner=Cristian
        ///svName=Server_v1
        ///defaultBanTime=120
        ///svWelcomeMsg=Welcome_msg
        ///
        ///autoban=true
        ///reportsBevoidTime=20
        ///reportMajorityPercent=50
        ///.
        /// </summary>
        internal static string DefaultSettingsFileContents {
            get {
                return ResourceManager.GetString("DefaultSettingsFileContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] icgen {
            get {
                object obj = ResourceManager.GetObject("icgen", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
